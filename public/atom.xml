<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>曜彤.手记</title>
  <icon>https://www.yhspy.com/images/rss.png</icon>
  <subtitle>YHSPY</subtitle>
  <link href="//atom.xml" rel="self"/>
  
  <link href="https://www.yhspy.com/"/>
  <updated>2020-08-24T13:54:22.299Z</updated>
  <id>https://www.yhspy.com/</id>
  
  <author>
    <name>于航(曜彤)</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>常用 Threading Models 的伪代码示例</title>
    <link href="https://www.yhspy.com/2020/08/24/%E5%B8%B8%E7%94%A8-Threading-Models-%E7%9A%84%E4%BC%AA%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/"/>
    <id>https://www.yhspy.com/2020/08/24/%E5%B8%B8%E7%94%A8-Threading-Models-%E7%9A%84%E4%BC%AA%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B/</id>
    <published>2020-08-24T11:45:11.000Z</published>
    <updated>2020-08-24T13:54:22.299Z</updated>
    
    <summary type="html">
    
      RT。
    
    </summary>
    
    
    
      <category term="虚拟机" scheme="https://www.yhspy.com/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>【译】Threaded Code</title>
    <link href="https://www.yhspy.com/2020/08/21/Threaded-Code/"/>
    <id>https://www.yhspy.com/2020/08/21/Threaded-Code/</id>
    <published>2020-08-20T23:01:46.000Z</published>
    <updated>2020-08-24T12:13:56.322Z</updated>
    
    <summary type="html">
    
      本文用于记录有关 Threaded Code 的一些内容。此文原文较老（2003），仅供参考。
    
    </summary>
    
    
    
      <category term="虚拟机" scheme="https://www.yhspy.com/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>C++ Dependent Names、non-ADL 以及 ADL 查找</title>
    <link href="https://www.yhspy.com/2020/08/18/C-Dependent-Names%E3%80%81non-ADL-%E4%BB%A5%E5%8F%8A-ADL-%E6%9F%A5%E6%89%BE/"/>
    <id>https://www.yhspy.com/2020/08/18/C-Dependent-Names%E3%80%81non-ADL-%E4%BB%A5%E5%8F%8A-ADL-%E6%9F%A5%E6%89%BE/</id>
    <published>2020-08-18T10:13:58.000Z</published>
    <updated>2020-08-20T10:09:18.554Z</updated>
    
    <summary type="html">
    
      记录下 C++ 中对于 Dependent Names 在 non-ADL 以及 ADL 这两种情况下的名字查找规则。
    
    </summary>
    
    
    
      <category term="C++" scheme="https://www.yhspy.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Wasm3 架构剖析</title>
    <link href="https://www.yhspy.com/2020/08/18/Wasm3-%E6%9E%B6%E6%9E%84%E5%89%96%E6%9E%90/"/>
    <id>https://www.yhspy.com/2020/08/18/Wasm3-%E6%9E%B6%E6%9E%84%E5%89%96%E6%9E%90/</id>
    <published>2020-08-18T02:49:59.000Z</published>
    <updated>2020-08-18T08:51:46.242Z</updated>
    
    <summary type="html">
    
      本文将剖析 Wasm3 虚拟机架构的组成结构，以及其性能优化的细节。
    
    </summary>
    
    
    
      <category term="虚拟机" scheme="https://www.yhspy.com/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>C++20: The Big Four</title>
    <link href="https://www.yhspy.com/2020/08/17/C-20-The-Big-Four/"/>
    <id>https://www.yhspy.com/2020/08/17/C-20-The-Big-Four/</id>
    <published>2020-08-17T01:46:16.000Z</published>
    <updated>2020-08-17T13:52:35.801Z</updated>
    
    <summary type="html">
    
      C++20 是自 C++17 之后的又一次 C++ 语言标准上的“重大改版”。而 “Big Four” 则是该标准中相较于 C++14 与 C++17 而言的，四个最为重要的新特性。它们分别对应着 Concepts、Ranges、Coroutines 以及 Modules。
    
    </summary>
    
    
    
      <category term="C++" scheme="https://www.yhspy.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>ASM.js 标准草案分析（18 August 2014）</title>
    <link href="https://www.yhspy.com/2020/08/09/ASM-js-%E6%A0%87%E5%87%86%E8%8D%89%E6%A1%88%E5%88%86%E6%9E%90%EF%BC%8818-August-2014%EF%BC%89/"/>
    <id>https://www.yhspy.com/2020/08/09/ASM-js-%E6%A0%87%E5%87%86%E8%8D%89%E6%A1%88%E5%88%86%E6%9E%90%EF%BC%8818-August-2014%EF%BC%89/</id>
    <published>2020-08-09T02:25:05.000Z</published>
    <updated>2020-08-18T10:11:58.121Z</updated>
    
    <summary type="html">
    
      ASM.js 是 JavaScript 的严格子集，可作为编译器的一种低级、高效的目标语言。该子语言有效地描述了针对内存不安全语言（例如 C/C++。如：指针可能指向非法值、数组访问可能越界）的沙盒虚拟机。一种静态和动态验证相结合的方式使得 JavaScript 引擎可以针对有效的 ASM.js 代码采用 AOT 优化编译策略。
    
    </summary>
    
    
    
      <category term="ASM.js" scheme="https://www.yhspy.com/tags/ASM-js/"/>
    
  </entry>
  
  <entry>
    <title>vtable 与 vptr</title>
    <link href="https://www.yhspy.com/2020/08/07/vtable-%E4%B8%8E-vptr/"/>
    <id>https://www.yhspy.com/2020/08/07/vtable-%E4%B8%8E-vptr/</id>
    <published>2020-08-07T01:51:38.000Z</published>
    <updated>2020-08-17T14:51:49.474Z</updated>
    
    <summary type="html">
    
      这个大众话题一直被放在 TODO 列表里，今天终于有时间来稍微写一下了。问题是之前有人在群里问能不能直接在 C/C++ 代码里访问类的 Virtual Table（后面简称 vtable），但事实情况是由于编译器的 ABI 不同，实际上对于 vtable 的具体结构和内存布局没有标准化的说明，因此不能按照想当然的方式来访问。本文我们来具体深入探究一下。
    
    </summary>
    
    
    
      <category term="C++" scheme="https://www.yhspy.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>CRTP 与常见用例</title>
    <link href="https://www.yhspy.com/2020/08/06/CRTP-%E4%B8%8E%E5%B8%B8%E8%A7%81%E7%94%A8%E4%BE%8B/"/>
    <id>https://www.yhspy.com/2020/08/06/CRTP-%E4%B8%8E%E5%B8%B8%E8%A7%81%E7%94%A8%E4%BE%8B/</id>
    <published>2020-08-06T09:02:38.000Z</published>
    <updated>2020-08-18T03:00:31.270Z</updated>
    
    <summary type="html">
    
      CRTP 的全称为 “Curiously Recurring Template Pattern”，是一种 C++ 模板编程中的常用模式。其形式是将派生类作为基类的模板参数。从“类型理论”上来讲，这是一类 “F-bounded polymorphism”。
    
    </summary>
    
    
    
      <category term="C++" scheme="https://www.yhspy.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>《C++17 STL Cookbook》读书笔记（四）</title>
    <link href="https://www.yhspy.com/2020/08/06/%E3%80%8AC-17-STL-Cookbook%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <id>https://www.yhspy.com/2020/08/06/%E3%80%8AC-17-STL-Cookbook%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89/</id>
    <published>2020-08-06T05:24:05.000Z</published>
    <updated>2020-08-11T12:06:29.574Z</updated>
    
    <summary type="html">
    
      还是继续接上篇。
    
    </summary>
    
    
    
      <category term="C++" scheme="https://www.yhspy.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>《C++17 STL Cookbook》读书笔记（三）</title>
    <link href="https://www.yhspy.com/2020/07/31/%E3%80%8AC-17-STL-Cookbook%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>https://www.yhspy.com/2020/07/31/%E3%80%8AC-17-STL-Cookbook%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/</id>
    <published>2020-07-31T13:19:12.000Z</published>
    <updated>2020-08-06T08:10:53.695Z</updated>
    
    <summary type="html">
    
      继续接上篇。
    
    </summary>
    
    
    
      <category term="C++" scheme="https://www.yhspy.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>《C++17 STL Cookbook》读书笔记（二）</title>
    <link href="https://www.yhspy.com/2020/07/28/%E3%80%8AC-17-STL-Cookbook%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://www.yhspy.com/2020/07/28/%E3%80%8AC-17-STL-Cookbook%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2020-07-28T04:14:05.000Z</published>
    <updated>2020-08-01T01:19:11.157Z</updated>
    
    <summary type="html">
    
      接上篇。
    
    </summary>
    
    
    
      <category term="C++" scheme="https://www.yhspy.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>《C++17 STL Cookbook》读书笔记（一）</title>
    <link href="https://www.yhspy.com/2020/07/22/%E3%80%8AC-17-STL-Cookbook%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://www.yhspy.com/2020/07/22/%E3%80%8AC-17-STL-Cookbook%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-07-21T16:08:03.000Z</published>
    <updated>2020-07-28T04:16:24.100Z</updated>
    
    <summary type="html">
    
      看到知乎上有人推荐的一本书。
    
    </summary>
    
    
    
      <category term="C++" scheme="https://www.yhspy.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>老生常谈之：switch-case VS if-else</title>
    <link href="https://www.yhspy.com/2020/07/18/%E8%80%81%E7%94%9F%E5%B8%B8%E8%B0%88%E4%B9%8B%EF%BC%9Aswitch-case-VS-if-else/"/>
    <id>https://www.yhspy.com/2020/07/18/%E8%80%81%E7%94%9F%E5%B8%B8%E8%B0%88%E4%B9%8B%EF%BC%9Aswitch-case-VS-if-else/</id>
    <published>2020-07-18T13:36:02.000Z</published>
    <updated>2020-07-19T04:19:59.924Z</updated>
    
    <summary type="html">
    
      “在同等条件下，使用 switch-case 与 if-else 哪一个可以在 C++ 中生成质量更好、性能更高的目标代码呢？”这似乎是一个老生常谈的问题，今天我们就来深入研究一下。
    
    </summary>
    
    
    
      <category term="C++" scheme="https://www.yhspy.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>《虚拟机系统与进程的通用平台》基础概述</title>
    <link href="https://www.yhspy.com/2020/07/15/%E3%80%8A%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%9A%84%E9%80%9A%E7%94%A8%E5%B9%B3%E5%8F%B0%E3%80%8B%E5%9F%BA%E7%A1%80%E6%A6%82%E8%BF%B0/"/>
    <id>https://www.yhspy.com/2020/07/15/%E3%80%8A%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%8E%E8%BF%9B%E7%A8%8B%E7%9A%84%E9%80%9A%E7%94%A8%E5%B9%B3%E5%8F%B0%E3%80%8B%E5%9F%BA%E7%A1%80%E6%A6%82%E8%BF%B0/</id>
    <published>2020-07-15T10:09:30.000Z</published>
    <updated>2020-08-18T12:48:57.123Z</updated>
    
    <summary type="html">
    
      这本书读起来比较学术，所以看心情挑着读读。（翻译质量奇差）
    
    </summary>
    
    
    
      <category term="虚拟机" scheme="https://www.yhspy.com/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>std::optional 与 Optional References</title>
    <link href="https://www.yhspy.com/2020/07/11/std-optional-%E4%B8%8E-Optional-References/"/>
    <id>https://www.yhspy.com/2020/07/11/std-optional-%E4%B8%8E-Optional-References/</id>
    <published>2020-07-11T03:30:44.000Z</published>
    <updated>2020-07-12T08:31:21.994Z</updated>
    
    <summary type="html">
    
      std::optional 是 C++17 中新添加的一个类模板，用来表示**一个值可能存在一种“不可用”的状态**。这类的场景需求很多，比如“搜索一个字符串中的所有字符，并返回其中出现的第一个数字值”。针对这个需求，我们可能获得多个不同的结果，但其中一个相对特殊的结果是“字符串中没有可返回的数字值”。那么这个时候，std::optional 就可以派上用场了。
    
    </summary>
    
    
    
      <category term="C++" scheme="https://www.yhspy.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>《Low-Level Programming》读书笔记（三）</title>
    <link href="https://www.yhspy.com/2020/07/06/%E2%80%9CLow-Level-Programming%E2%80%9D-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>https://www.yhspy.com/2020/07/06/%E2%80%9CLow-Level-Programming%E2%80%9D-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89/</id>
    <published>2020-07-06T09:55:14.000Z</published>
    <updated>2020-07-08T16:15:34.430Z</updated>
    
    <summary type="html">
    
      内容还是太多，所以还是继续书接上文。
    
    </summary>
    
    
    
      <category term="汇编" scheme="https://www.yhspy.com/tags/%E6%B1%87%E7%BC%96/"/>
    
  </entry>
  
  <entry>
    <title>《Low-Level Programming》读书笔记（二）</title>
    <link href="https://www.yhspy.com/2020/06/29/%E2%80%9CLow-Level-Programming%E2%80%9D-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://www.yhspy.com/2020/06/29/%E2%80%9CLow-Level-Programming%E2%80%9D-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2020-06-28T16:28:35.000Z</published>
    <updated>2020-07-08T12:40:25.974Z</updated>
    
    <summary type="html">
    
      内容太多，所以分成多篇来记录了，书接上文。
    
    </summary>
    
    
    
      <category term="汇编" scheme="https://www.yhspy.com/tags/%E6%B1%87%E7%BC%96/"/>
    
  </entry>
  
  <entry>
    <title>《Advanced Design and Implementation of VMs》读书笔记（一）</title>
    <link href="https://www.yhspy.com/2020/06/26/%E2%80%9CAdvanced-Design-and-Implementation-of-Virtual-Machines%E2%80%9D-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://www.yhspy.com/2020/06/26/%E2%80%9CAdvanced-Design-and-Implementation-of-Virtual-Machines%E2%80%9D-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-06-26T08:42:01.000Z</published>
    <updated>2020-07-15T09:53:13.505Z</updated>
    
    <summary type="html">
    
      也是很久之前无意间搜罗到的一本关于 VM 的好书，趁此疫情 WFH 期间时间充足，赶紧读起来。PS. 果然国人写的英语书籍就是比外国人写的好读很多，主要是因为 —— 废话少。
    
    </summary>
    
    
    
      <category term="虚拟机" scheme="https://www.yhspy.com/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>《Low-Level Programming》读书笔记（一）</title>
    <link href="https://www.yhspy.com/2020/06/25/%E2%80%9CLow-Level-Programming%E2%80%9D-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://www.yhspy.com/2020/06/25/%E2%80%9CLow-Level-Programming%E2%80%9D-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-06-25T08:15:36.000Z</published>
    <updated>2020-07-18T03:00:38.482Z</updated>
    
    <summary type="html">
    
      无意间找到的一本好书，主要介绍 X86_64 体系下的 C 和汇编。其中第十二章关于“编程语言设计”部分的内容，以及第十三章关于“良好编码规范”的内容就简单略过了。
    
    </summary>
    
    
    
      <category term="汇编" scheme="https://www.yhspy.com/tags/%E6%B1%87%E7%BC%96/"/>
    
  </entry>
  
  <entry>
    <title>NASM 小记录</title>
    <link href="https://www.yhspy.com/2020/06/25/NASM-%E5%B0%8F%E8%AE%B0%E5%BD%95/"/>
    <id>https://www.yhspy.com/2020/06/25/NASM-%E5%B0%8F%E8%AE%B0%E5%BD%95/</id>
    <published>2020-06-25T05:42:46.000Z</published>
    <updated>2020-07-04T08:50:54.907Z</updated>
    
    <summary type="html">
    
      本文记录一些在使用 NASM 时遇到的常用信息，以供快速查阅之用。
    
    </summary>
    
    
    
      <category term="NASM" scheme="https://www.yhspy.com/tags/NASM/"/>
    
  </entry>
  
  <entry>
    <title>Linux 共享库应用 --version-script</title>
    <link href="https://www.yhspy.com/2020/06/23/Linux-%E5%85%B1%E4%BA%AB%E5%BA%93%E5%BA%94%E7%94%A8-version-script/"/>
    <id>https://www.yhspy.com/2020/06/23/Linux-%E5%85%B1%E4%BA%AB%E5%BA%93%E5%BA%94%E7%94%A8-version-script/</id>
    <published>2020-06-23T10:18:37.000Z</published>
    <updated>2020-06-23T11:25:51.863Z</updated>
    
    <summary type="html">
    
      我们知道，传统 Linux 共享库的 SO-NAME 机制无法解决当依赖共享库的次版本号不同时所可能带来的符号不兼容问题。为此，我们可以为共享库添加 Version Script 以标记其中各符号所对应的次版本号，当所依赖版本符号不存在时便可以给出相对友好的提示信息。不仅如此，借助 Version Script 我们还可以向应用程序屏蔽共享库的一些内部工具符号。
    
    </summary>
    
    
    
      <category term="计算机" scheme="https://www.yhspy.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>《程序员的自我修养 — 链接、装载与库》读书笔记（二）</title>
    <link href="https://www.yhspy.com/2020/06/21/%E9%93%BE%E6%8E%A5%E3%80%81%E8%A3%85%E8%BD%BD%E4%B8%8E%E5%BA%93%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://www.yhspy.com/2020/06/21/%E9%93%BE%E6%8E%A5%E3%80%81%E8%A3%85%E8%BD%BD%E4%B8%8E%E5%BA%93%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2020-06-21T14:00:50.000Z</published>
    <updated>2020-07-07T12:25:40.877Z</updated>
    
    <summary type="html">
    
      书接上文。
    
    </summary>
    
    
    
      <category term="计算机" scheme="https://www.yhspy.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>ld 链接控制脚本与默认脚本</title>
    <link href="https://www.yhspy.com/2020/06/19/ld-%E9%93%BE%E6%8E%A5%E6%8E%A7%E5%88%B6%E8%84%9A%E6%9C%AC%E4%B8%8E%E9%BB%98%E8%AE%A4%E8%84%9A%E6%9C%AC/"/>
    <id>https://www.yhspy.com/2020/06/19/ld-%E9%93%BE%E6%8E%A5%E6%8E%A7%E5%88%B6%E8%84%9A%E6%9C%AC%E4%B8%8E%E9%BB%98%E8%AE%A4%E8%84%9A%E6%9C%AC/</id>
    <published>2020-06-19T10:02:50.000Z</published>
    <updated>2020-06-19T10:17:04.344Z</updated>
    
    <summary type="html">
    
      我们可以通过 `ld -verbose` 命令来查看 GNU 链接器 ld 默认使用的内部链接控制脚本。这里直接列出该控制脚本的内容。
    
    </summary>
    
    
    
      <category term="计算机" scheme="https://www.yhspy.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>尝试构建体积最小的 ELF 可执行程序</title>
    <link href="https://www.yhspy.com/2020/06/19/%E5%B0%9D%E8%AF%95%E6%9E%84%E5%BB%BA%E4%BD%93%E7%A7%AF%E6%9C%80%E5%B0%8F%E7%9A%84-ELF-%E5%8F%AF%E6%89%A7%E8%A1%8C%E7%A8%8B%E5%BA%8F/"/>
    <id>https://www.yhspy.com/2020/06/19/%E5%B0%9D%E8%AF%95%E6%9E%84%E5%BB%BA%E4%BD%93%E7%A7%AF%E6%9C%80%E5%B0%8F%E7%9A%84-ELF-%E5%8F%AF%E6%89%A7%E8%A1%8C%E7%A8%8B%E5%BA%8F/</id>
    <published>2020-06-19T07:44:56.000Z</published>
    <updated>2020-06-26T01:03:41.373Z</updated>
    
    <summary type="html">
    
      本文将尝试构建一个代码量最少、体积最小的 ELF 可执行程序，程序运行时会向 stdout 输出字符串 “Hello, YHSPY!”。
    
    </summary>
    
    
    
      <category term="计算机" scheme="https://www.yhspy.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>GCC 下的 COMMON 块控制</title>
    <link href="https://www.yhspy.com/2020/06/19/GCC-%E4%B8%8B%E7%9A%84-COMMON-%E5%9D%97%E6%8E%A7%E5%88%B6/"/>
    <id>https://www.yhspy.com/2020/06/19/GCC-%E4%B8%8B%E7%9A%84-COMMON-%E5%9D%97%E6%8E%A7%E5%88%B6/</id>
    <published>2020-06-19T03:18:27.000Z</published>
    <updated>2020-06-19T05:56:29.129Z</updated>
    
    <summary type="html">
    
      在 GCC 下，我们可以通过 `__attribute__((common))` 扩展参数来控制编译器对 C 源码中的未初始化全局变量的处理方式。默认情况下，GCC 将采用 COMMON 块来存放未初始化全局变量，这里注意是 C 源代码。
    
    </summary>
    
    
    
      <category term="计算机" scheme="https://www.yhspy.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>ELF 静态 / 动态链接流程解析</title>
    <link href="https://www.yhspy.com/2020/06/18/ELF-%E9%9D%99%E6%80%81-%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5%E6%B5%81%E7%A8%8B%E8%A7%A3%E6%9E%90/"/>
    <id>https://www.yhspy.com/2020/06/18/ELF-%E9%9D%99%E6%80%81-%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5%E6%B5%81%E7%A8%8B%E8%A7%A3%E6%9E%90/</id>
    <published>2020-06-18T11:24:18.000Z</published>
    <updated>2020-06-24T22:13:06.841Z</updated>
    
    <summary type="html">
    
      本文将以两个具体的例子来剖析 ELF 目标文件（.o）和动态库文件（.so）在分别进行静态链接和动态链接时的具体流程。
    
    </summary>
    
    
    
      <category term="计算机" scheme="https://www.yhspy.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Clang 下的 weak 与 weakref</title>
    <link href="https://www.yhspy.com/2020/06/18/Clang-%E4%B8%8B%E7%9A%84-weak-%E4%B8%8E-weakref/"/>
    <id>https://www.yhspy.com/2020/06/18/Clang-%E4%B8%8B%E7%9A%84-weak-%E4%B8%8E-weakref/</id>
    <published>2020-06-18T05:24:56.000Z</published>
    <updated>2020-06-18T09:23:18.079Z</updated>
    
    <summary type="html">
    
      符号表结构中 st_info 字段的高 28 位决定了 ST_BIND 的值，而它的一种枚举值 STB_WEAK 表示了一种特殊类型的符号，即“弱符号”。而对应的一种抽象关系便称为“弱引用”。同时相对的，也有着“强符号”和“强引用”的定义。
    
    </summary>
    
    
    
      <category term="计算机" scheme="https://www.yhspy.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>使用 objcopy 为 ELF 加入自定义 Section</title>
    <link href="https://www.yhspy.com/2020/06/17/%E4%BD%BF%E7%94%A8-objcopy-%E4%B8%BA-ELF-%E5%8A%A0%E5%85%A5%E8%87%AA%E5%AE%9A%E4%B9%89-Section/"/>
    <id>https://www.yhspy.com/2020/06/17/%E4%BD%BF%E7%94%A8-objcopy-%E4%B8%BA-ELF-%E5%8A%A0%E5%85%A5%E8%87%AA%E5%AE%9A%E4%B9%89-Section/</id>
    <published>2020-06-17T07:42:53.000Z</published>
    <updated>2020-06-18T05:21:49.787Z</updated>
    
    <summary type="html">
    
      我们可以使用 objcopy 工具为一个 ELF 文件加入自定义的 Section 信息，并在主程序中访问该目标文件中这些自定义的 Section 内的数据。
    
    </summary>
    
    
    
      <category term="计算机" scheme="https://www.yhspy.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Linux 下的 ELF 完整结构分析</title>
    <link href="https://www.yhspy.com/2020/06/17/Linux%20%E4%B8%8B%E7%9A%84%20ELF%20%E5%AE%8C%E6%95%B4%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/"/>
    <id>https://www.yhspy.com/2020/06/17/Linux%20%E4%B8%8B%E7%9A%84%20ELF%20%E5%AE%8C%E6%95%B4%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/</id>
    <published>2020-06-17T06:23:58.000Z</published>
    <updated>2020-06-23T05:57:33.381Z</updated>
    
    <summary type="html">
    
      本文我们将以如下这段代码为例，来分析其对应 ELF Object / Executable 文件在 Linux 下的完整数据结构，以及各结构在操作系统源码中的实际类型定义。
    
    </summary>
    
    
    
      <category term="计算机" scheme="https://www.yhspy.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>《程序员的自我修养 — 链接、装载与库》读书笔记（一）</title>
    <link href="https://www.yhspy.com/2020/06/16/%E9%93%BE%E6%8E%A5%E3%80%81%E8%A3%85%E8%BD%BD%E4%B8%8E%E5%BA%93%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://www.yhspy.com/2020/06/16/%E9%93%BE%E6%8E%A5%E3%80%81%E8%A3%85%E8%BD%BD%E4%B8%8E%E5%BA%93%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-06-16T11:15:02.000Z</published>
    <updated>2020-08-22T10:17:47.170Z</updated>
    
    <summary type="html">
    
      本文内容主要摘自《程序员的自我修养 — 链接、装载与库》一书。
    
    </summary>
    
    
    
      <category term="计算机" scheme="https://www.yhspy.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
</feed>
