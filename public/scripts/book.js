document.addEventListener("DOMContentLoaded",async a=>{const e=(await axios.get("/auth-graphql",{params:{query:"\n        query {\n          fetchAllBookRecord {\n            id\n            name\n            url\n            totalPages\n            currentPages\n          }\n        }"}})).data.data.fetchAllBookRecord;if(Array.isArray(e)&&e.length>0){const a=document.querySelector(".books-container");a.insertAdjacentHTML("afterbegin",e.map(a=>{const e=(100*Number(a.currentPages/a.totalPages)).toFixed(2);return`\n        <div class="book-item">\n          <span>《${a.name}》</span>\n          <span class="progress-pages">${a.currentPages} / ${a.totalPages}</span>\n          <span class="progress"><progress value="${e}" max="100"></span>\n          <span class="state">${e}%</span>\n          <button class="action-read" data-url="${a.url}" data-id="${a.id}" data-page="${a.currentPages}">阅读</button>\n          <button class="action-note" data-id="${a.id}">笔记</button>\n        </div>`}).join("")),a.addEventListener("click",async a=>{const{url:e,id:n,page:t}=a.target.dataset;if("action-read"===a.target.className&&e&&window.open(`/app-pdf-viewer/web/viewer.html?file=${encodeURIComponent(e)}#page=${t}`),"action-note"===a.target.className&&n){const a=(await axios.get("/graphql",{params:{query:"\n              query fetchBookNotes($id: Int!) {\n                fetchAllBookNoteById(id: $id) {\n                  id\n                  bookId\n                  page\n                  note\n                }\n              }\n            ",variables:{id:Number(n)}}})).data.data.fetchAllBookNoteById;window.open().document.write(`<ol>${a.map(a=>`<li><pre>(Page: ${a.page})<br/>${a.note}</pre></li>`).join("")}</ol>`)}})}});