document.addEventListener("DOMContentLoaded",async e=>{const t=()=>{"column"===window.getComputedStyle(document.body,null).getPropertyValue("flex-direction")?document.documentElement.scrollTop=0:document.querySelector("main").scrollTop=0};document.querySelector(".touch-top").addEventListener("touchstart",t),document.querySelector(".touch-top").addEventListener("click",t);const n=document.querySelector(".canvas-containter");let o=new Zoomage({container:n,enableDesktop:!0,enableGestureRotate:!0,dbclickZoomThreshold:.1,maxZoom:3,minZoom:.1});document.querySelector("article").addEventListener("click",e=>{const t=e.target||e.srcElement;"IMG"===t.tagName&&(n.style.opacity="1",n.style.display="block",n.style.zIndex="200",n.classList.add("animation-show"),n.classList.remove("animation-hide"),o.load(t.currentSrc))}),n.querySelector("span").addEventListener("click",()=>{n.style.opacity="0",n.style.zIndex="-200",n.classList.add("animation-hide"),n.classList.remove("animation-show")});const s=document.querySelector("article").getAttribute("post-id"),a=document.querySelector(".comments-input textarea"),r=document.querySelector('.comments-input input[type="text"]'),c=document.querySelector(".comments-display-container");c.addEventListener("click",e=>{const t=e.target||e.srcElement;"nickname"===t.className&&(a.value=`@${t.innerText} `+a.value)});const i=e=>`\n      <div class="comment-snippet">\n        <div>\n          <span class="nickname">${e.publisher}</span>\n          <span class="date">${e.publishTime}</span>\n        </div>\n        <div class="content">${e.content}</div>\n      </div>\n    `;document.querySelector(".submit-comment").addEventListener("click",async()=>{const e=a.value,t=r.value;if(e&&t){const{data:{data:{insertPostComment:n}}}=await axios.post("http://localhost:3000/graphql",{query:"\nmutation insertPostComment($postId: String!, $publisher: String!, $content: String!) {\n  insertPostComment(postId: $postId, publisher: $publisher, content: $content) {\n    ...post\n  }\n}\n\nfragment post on PostComment {\n  id\n  publisher\n  content\n  ipAddr\n  publishTime\n}\n        ",variables:{postId:s,content:e,publisher:t}});let o=c.querySelector(".placeholder");o&&o.remove(),c.insertAdjacentHTML("afterbegin",i(n)),(a.value="")||(r.value="")}else alert("请输入【评论内容】和【昵称】后再提交！")});(async(e=!1)=>{const{data:{data:{postComments:t}}}=await axios.get("http://localhost:3000/graphql",{params:{query:`\nquery {\n  postComments(postId: "${s}") {\n    ...post\n  }\n}\nfragment post on PostComment {\n  id\n  publisher\n  content\n  publishTime\n}\n        `}});if(Array.isArray(t)&&t.length>0){let e=c.querySelector(".placeholder");e&&e.remove(),t.forEach(e=>{c.insertAdjacentHTML("beforeend",i(e))})}e&&e()})()}),"serviceWorker"in window.navigator&&window.addEventListener("load",()=>{window.navigator.serviceWorker.register("/sw.js")});