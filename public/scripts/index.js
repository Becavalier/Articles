document.addEventListener("DOMContentLoaded",async e=>{const t=()=>{"column"===window.getComputedStyle(document.body,null).getPropertyValue("flex-direction")?document.documentElement.scrollTop=0:document.querySelector("main").scrollTop=0};document.querySelector(".touch-top").addEventListener("touchstart",t),document.querySelector(".touch-top").addEventListener("click",t);const n=document.querySelector(".canvas-containter");let o=new Zoomage({container:n,enableDesktop:!0,enableGestureRotate:!0,dbclickZoomThreshold:.1,maxZoom:3,minZoom:.1});document.querySelector("article").addEventListener("click",e=>{const t=e.target||e.srcElement;"IMG"===t.tagName&&(n.style.opacity="1",n.style.display="block",n.style.zIndex="200",n.classList.add("animation-show"),n.classList.remove("animation-hide"),o.load(t.currentSrc))}),n.querySelector("span").addEventListener("click",()=>{n.style.opacity="0",n.style.zIndex="-200",n.classList.add("animation-hide"),n.classList.remove("animation-show")});const s=document.querySelector("article").getAttribute("post-id"),a=document.querySelector(".comments-input textarea"),r=document.querySelector('.comments-input input[type="text"]'),i=document.querySelector(".comments-display-container");i.addEventListener("click",e=>{const t=e.target||e.srcElement;"nickname"===t.className&&(a.value=`@${t.innerText} `+a.value)});const c=e=>`\n      <div class="comment-snippet">\n        <div>\n          <span class="nickname">${e.publisher}</span>\n          <span class="date">${e.publishTime}</span>\n        </div>\n        <div class="content">${e.content}</div>\n      </div>\n    `;document.querySelector(".submit-comment").addEventListener("click",async e=>{const t=e.target||e.srcElement,n=a.value,o=r.value;if(n&&o){t.disabled=!0,t.innerText="... 提交中 ...";try{const{data:{data:{insertPostComment:e}}}=await axios.post("/graphql",{query:"\n  mutation insertPostComment($postId: String!, $publisher: String!, $content: String!) {\n    insertPostComment(postId: $postId, publisher: $publisher, content: $content) {\n      ...post\n    }\n  }\n  \n  fragment post on PostComment {\n    id\n    publisher\n    content\n    ipAddr\n    publishTime\n  }\n          ",variables:{postId:s,content:n,publisher:o}});let l=i.querySelector(".placeholder");l&&l.remove(),i.insertAdjacentHTML("afterbegin",c(e)),(a.value="")||(r.value=""),window.location.href="#comments"}finally{t.disabled=!1,t.innerText="发布"}}else alert("请同时输入【评论内容】和【昵称】后再提交！")});(async(e=!1)=>{const{data:{data:{postComments:t}}}=await axios.get("/graphql",{params:{query:`\nquery {\n  postComments(postId: "${s}") {\n    ...post\n  }\n}\nfragment post on PostComment {\n  id\n  publisher\n  content\n  publishTime\n}\n        `}});if(Array.isArray(t)&&t.length>0){let e=i.querySelector(".placeholder");e&&e.remove(),t.forEach(e=>{i.insertAdjacentHTML("beforeend",c(e))})}e&&e()})()}),"serviceWorker"in window.navigator&&window.addEventListener("load",()=>{window.navigator.serviceWorker.register("/sw.js")});